"use strict"; (self.webpackChunkaprover_site = self.webpackChunkaprover_site || []).push([[906], { 223: (t, e, i) => { i(459), i(555); var o = i(561), n = i(755); o.shape.layout.VerticalLayout.extend({ NAME: "asymmetricEncryption", init: function (t) { this._super(n.extend({ bgColor: "#dbddde", color: "#d7d7d7", stroke: 1, radius: 3, resizeable: !0 }, t)), this.classLabel = new o.shape.basic.Label({ text: "ClassName", bold: !0, stroke: 1, fontColor: "#FBFCFC", bgColor: "#540804", color: "#430603", radius: this.getRadius(), padding: 10, resizeable: !0, editor: new o.ui.LabelInplaceEditor }), this.add(this.classLabel) }, addInOut: function () { var t = new o.shape.basic.Label({ text: "Public Key", stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), e = new o.shape.basic.Label({ text: "Knowledge", stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), i = new LabelRight({ text: "Ciphertext", stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), n = t.createPort("input"); n.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), n.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), n.setSemanticGroup("asympubkey"), n.setName("input_" + t.id), n.setColor("#47D7AC"), n.setBackgroundColor("#47D7AC"), n.setMaxFanOut(1); var r = e.createPort("input"); r.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), r.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), r.setName("input_" + e.id), r.setColor("#04773b"), r.setBackgroundColor("#04773b"), r.setMaxFanOut(1); var a = i.createPort("output"); a.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), a.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), a.setName("output_" + i.id), a.setColor("#04773b"), a.setBackgroundColor("#04773b"); let s = new o.shape.layout.TableLayout({ bgColor: null, color: null, radius: this.getRadius(), resizeable: !0, padding: { top: 5 } }); return s.addRow(t, i), s.addRow(e), this.add(s), r.on("connect", ((t, e) => { r.getConnections().each(((t, e) => { e.getTarget().setValue(e.getSource().getValue()) })) })), n.on("connect", ((t, e) => { n.getConnections().each(((t, e) => { e.getTarget().setValue(e.getSource().getValue()) })) })), a.on("change:value", ((t, e) => { a.getConnections().each(((t, e) => { e.getTarget().setValue(e.getSource().getValue()) })) })), s }, addEntityIn: function (t) { var e = new o.shape.basic.Label({ text: t, stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), i = e.createPort("input"); return i.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), i.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), i.setName("input_" + e.id), e }, removeEntity: function (t) { this.remove(this.children.get(t + 1).figure) }, getEntity: function (t) { return this.children.get(t + 1).figure }, addEntityOut: function (t) { var e = new LabelRight({ text: t, stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), i = e.createPort("output"); return i.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), i.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), i.setName("output_" + e.id), e }, setName: function (t) { return this.classLabel.setText(t), this }, getPersistentAttributes: function () { var t = this._super(); return t.name = this.classLabel.getText(), t.entities = [], this.children.each((function (e, i) { e > 0 && t.entities.push({ text: i.figure.getText(), id: i.figure.id }) })), t }, setPersistentAttributes: function (t) { this._super(t), this.setName(t.name); let e = new o.shape.layout.TableLayout({ bgColor: null, color: null, radius: this.getRadius(), resizeable: !0 }); if (void 0 !== t.entitiesInput && void 0 !== t.entitiesOutput) { var i = t.entitiesOutput.length; n.each(t.entitiesInput, n.proxy((function (o, n) { var r = this.addEntityIn(n.text); if (r.id = n.id, r.getInputPort(0).setName("input_" + n.id), 0 == o && e.attr({ padding: { top: 5 } }), o < i) { var a = this.addEntityOut(t.entitiesOutput[o].text); a.id = t.entitiesOutput[o].id, a.getOutputPort(0).setName("output_" + t.entitiesOutput[o].id), e.addRow(r, a), e.setCellAlign(o, 1, "right") } else e.addRow(r) }), this)) } return this.add(e), this }, textify: function (t, e) { if (null !== t && null !== e) return "{" + t + "}<sub>" + e + "<sub>" }, getOutputPorts: function () { return this.getChildren().get(1).getChildren().get(1).getPorts().get(0) }, getInputPorts: function () { var t = new o.util.ArrayList, e = this.getChildren().get(1).getChildren().get(0).getPorts().get(0), i = this.getChildren().get(1).getChildren().get(2).getPorts().get(0); return t.add(e), t.add(i), t }, onPortValueChanged: function (t) { var e = []; this.getInputPorts().each((function (t, i) { e.push(i.getValue()) })), this.getOutputPorts().setValue("{" + e[1] + "}<sub>" + e[0] + "</sub>") } }) }, 957: (t, e, i) => { i(459), i(555); var o = i(561), n = i(755); o.shape.layout.VerticalLayout.extend({ NAME: "asymmetricPrivateKey", init: function (t) { this._super(n.extend({ bgColor: "#dbddde", color: "#d7d7d7", stroke: 1, radius: 3, resizeable: !0 }, t)), this.classLabel = new o.shape.basic.Label({ text: "ClassName", bold: !0, stroke: 1, fontColor: "#FFFFFF", bgColor: "#7AE1BF", color: "#61B498", radius: this.getRadius(), padding: 10, resizeable: !0, editor: new o.ui.LabelInplaceEditor }), this.add(this.classLabel) }, addInOut: function () { var t = new LabelRight({ text: "Key 1", stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), e = t.createPort("output"); return e.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), e.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), e.setSemanticGroup("asymprivkey"), e.setName("output_" + t.id), e.setColor("#7AE1BF"), e.setBackgroundColor("#7AE1BF"), this.add(t), container }, addEntityIn: function (t) { var e = new o.shape.basic.Label({ text: t, stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), i = e.createPort("input"); return i.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), i.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), i.setName("input_" + e.id), e }, removeEntity: function (t) { this.remove(this.children.get(t + 1).figure) }, getEntity: function (t) { return this.children.get(t + 1).figure }, addEntityOut: function (t) { var e = new LabelRight({ text: t, stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), i = e.createPort("output"); return i.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), i.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), i.setName("output_" + e.id), e }, setName: function (t) { return this.classLabel.setText(t), this }, getPersistentAttributes: function () { var t = this._super(); return t.name = this.classLabel.getText(), t.entities = [], this.children.each((function (e, i) { e > 0 && t.entities.push({ text: i.figure.getText(), id: i.figure.id }) })), t }, setPersistentAttributes: function (t) { this._super(t), this.setName(t.name); let e = new o.shape.layout.TableLayout({ bgColor: null, color: null, radius: this.getRadius(), resizeable: !0 }); if (void 0 !== t.entitiesInput && void 0 !== t.entitiesOutput) { var i = t.entitiesOutput.length; n.each(t.entitiesInput, n.proxy((function (o, n) { var r = this.addEntityIn(n.text); if (r.id = n.id, r.getInputPort(0).setName("input_" + n.id), 0 == o && e.attr({ padding: { top: 5 } }), o < i) { var a = this.addEntityOut(t.entitiesOutput[o].text); a.id = t.entitiesOutput[o].id, a.getOutputPort(0).setName("output_" + t.entitiesOutput[o].id), e.addRow(r, a), e.setCellAlign(o, 1, "right") } else e.addRow(r) }), this)) } return this.add(e), this } }) }, 631: (t, e, i) => { i(459), i(555); var o = i(561), n = i(755); o.shape.layout.VerticalLayout.extend({ NAME: "asymmetricPublicKey", init: function (t) { this._super(n.extend({ bgColor: "#dbddde", color: "#d7d7d7", stroke: 1, radius: 3, resizeable: !0 }, t)), this.classLabel = new o.shape.basic.Label({ text: "ClassName", bold: !0, stroke: 1, fontColor: "#FFFFFF", bgColor: "#47D7AC", color: "#38AC89", radius: this.getRadius(), padding: 10, resizeable: !0, editor: new o.ui.LabelInplaceEditor }), this.add(this.classLabel) }, addInOut: function () { var t = new LabelRight({ text: "Key 1", stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), e = t.createPort("output"); return e.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), e.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), e.setSemanticGroup("asympubkey"), e.setName("output_" + t.id), e.setColor("#47D7AC"), e.setBackgroundColor("#47D7AC"), e.setValue("PUBKB"), this.add(t), container }, addEntityIn: function (t) { var e = new o.shape.basic.Label({ text: t, stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), i = e.createPort("input"); return i.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), i.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), i.setName("input_" + e.id), e }, removeEntity: function (t) { this.remove(this.children.get(t + 1).figure) }, getEntity: function (t) { return this.children.get(t + 1).figure }, addEntityOut: function (t) { var e = new LabelRight({ text: t, stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), i = e.createPort("output"); return i.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), i.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), i.setName("output_" + e.id), e }, setName: function (t) { return this.classLabel.setText(t), this }, getPersistentAttributes: function () { var t = this._super(); return t.name = this.classLabel.getText(), t.entities = [], this.children.each((function (e, i) { e > 0 && t.entities.push({ text: i.figure.getText(), id: i.figure.id }) })), t }, setPersistentAttributes: function (t) { this._super(t), this.setName(t.name); let e = new o.shape.layout.TableLayout({ bgColor: null, color: null, radius: this.getRadius(), resizeable: !0 }); if (void 0 !== t.entitiesInput && void 0 !== t.entitiesOutput) { var i = t.entitiesOutput.length; n.each(t.entitiesInput, n.proxy((function (o, n) { var r = this.addEntityIn(n.text); if (r.id = n.id, r.getInputPort(0).setName("input_" + n.id), 0 == o && e.attr({ padding: { top: 5 } }), o < i) { var a = this.addEntityOut(t.entitiesOutput[o].text); a.id = t.entitiesOutput[o].id, a.getOutputPort(0).setName("output_" + t.entitiesOutput[o].id), e.addRow(r, a), e.setCellAlign(o, 1, "right") } else e.addRow(r) }), this)) } return this.add(e), this } }) }, 509: (t, e, i) => { i(459), i(555); var o = i(561), n = i(755); o.shape.layout.VerticalLayout.extend({ NAME: "bitstring", init: function (t) { this._super(n.extend({ bgColor: "#dbddde", color: "#d7d7d7", stroke: 1, radius: 3, resizeable: !0 }, t)), this.classLabel = new o.shape.basic.Label({ text: "ClassName", bold: !0, stroke: 1, fontColor: "#FBFCFC", bgColor: "#007749", color: "#005F3A", radius: this.getRadius(), padding: 10, resizeable: !0, editor: new o.ui.LabelInplaceEditor }), this.add(this.classLabel) }, addInOut: function () { var t = new LabelRight({ text: "String 1", stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), e = t.createPort("output"); return e.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), e.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), e.setName("output_" + t.id), e.setColor("#04773b"), e.setBackgroundColor("#04773b"), this.add(t), container }, addEntityIn: function (t) { var e = new o.shape.basic.Label({ text: t, stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), i = e.createPort("input"); return i.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), i.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), i.setName("input_" + e.id), e }, removeEntity: function (t) { this.remove(this.children.get(t + 1).figure) }, getEntity: function (t) { return this.children.get(t + 1).figure }, addEntityOut: function (t) { var e = new LabelRight({ text: t, stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), i = e.createPort("output"); return i.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), i.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), i.setName("output_" + e.id), e }, setName: function (t) { return this.classLabel.setText(t), this }, getPersistentAttributes: function () { var t = this._super(); return t.name = this.classLabel.getText(), t.entities = [], this.children.each((function (e, i) { e > 0 && t.entities.push({ text: i.figure.getText(), id: i.figure.id }) })), t }, setPersistentAttributes: function (t) { this._super(t), this.setName(t.name); let e = new o.shape.layout.TableLayout({ bgColor: null, color: null, radius: this.getRadius(), resizeable: !0 }); if (void 0 !== t.entitiesInput && void 0 !== t.entitiesOutput) { var i = t.entitiesOutput.length; n.each(t.entitiesInput, n.proxy((function (o, n) { var r = this.addEntityIn(n.text); if (r.id = n.id, r.getInputPort(0).setName("input_" + n.id), 0 == o && e.attr({ padding: { top: 5 } }), o < i) { var a = this.addEntityOut(t.entitiesOutput[o].text); a.id = t.entitiesOutput[o].id, a.getOutputPort(0).setName("output_" + t.entitiesOutput[o].id), e.addRow(r, a), e.setCellAlign(o, 1, "right") } else e.addRow(r) }), this)) } return this.add(e), this } }) }, 801: (t, e, i) => { i.d(e, { Z: () => n }), i(459), i(555); var o = i(561); const n = o.command.Command.extend({ NAME: "CommandDelete", init: function (t) { this._super(), this.parent = t.getParent(), this.figure = t, this.canvas = t.getCanvas(), this.connections = null, this.removedParentEntry = null, this.indexOfChild = -1 }, canExecute: function () { return null !== this.figure.getCanvas() }, execute: function () { this.redo() }, undo: function () { null !== this.parent && (console.log(this.removedParentEntry[0][0]), this.parent.addIndexRow(this.removedParentEntry[0][0], this.indexOfChild), this.canvas.setCurrentSelection(this.parent.parent)), this.figure instanceof o.Connection && this.figure.reconnect(); for (var t = 0; t < this.connections.getSize(); ++t)this.canvas.add(this.connections.get(t)), this.connections.get(t).reconnect() }, redo: function () { this.canvas.setCurrentSelection(null), null === this.connections && (this.figure instanceof o.shape.node.Node ? this.connections = this.figure.getConnections() : this.connections = new o.util.ArrayList); for (var t = 0; t < this.connections.getSize(); ++t)this.canvas.remove(this.connections.get(t)); null !== this.parent && (this.indexOfChild = this.parent.getIndex(this.figure), this.removedParentEntry = this.parent.removeRow(this.indexOfChild)) } }) }, 791: (t, e, i) => { i.d(e, { Z: () => n }), i(459), i(555); var o = i(561); const n = o.policy.connection.ConnectionCreatePolicy.extend({ NAME: "DragConnectionCreatePolicy2", init: function (t, e, i) { this._super(t, e, i), this.mouseDraggingElement = null, this.currentDropTarget = null, this.currentTarget = null }, onMouseDown: function (t, e, i, n, r) { var a = t.getBestFigure(e, i); if (null !== a && a instanceof o.Port && (!0 === a.isInDragDrop && (a.onDragEnd(e, i, n, r), a.isInDragDrop = !1), a.isDraggable())) { var s = a.onDragStart(e - a.getAbsoluteX(), i - a.getAbsoluteY(), n, r); s && a.fireEvent("dragstart", { x: e - a.getAbsoluteX(), y: i - a.getAbsoluteY(), shiftKey: n, ctrlKey: r }), this.mouseDraggingElement = !1 === s ? null : a, this.mouseDownElement = a } }, onMouseDrag: function (t, e, i, n, r, a, s) { try { if (null !== this.mouseDraggingElement) { var l = this.mouseDraggingElement, u = this.currentTarget; l.isInDragDrop = !0, l.onDrag(e, i, n, r, a, s), (d = t.getBestFigure(l.getAbsoluteX(), l.getAbsoluteY(), l)) !== u && (null !== u && (u.onDragLeave(l), u.fireEvent("dragLeave", { draggingElement: l }), l.editPolicy.each((function (e, i) { i instanceof o.policy.port.FlowPortsFeedbackPolicy && i.onHoverLeave(t, l, u) }))), null !== d ? (this.currentTarget = u = d.delegateTarget(l), null !== u && (u.onDragEnter(l), u.fireEvent("dragEnter", { draggingElement: l }), l.editPolicy.each((function (e, i) { i instanceof o.policy.port.FlowPortsFeedbackPolicy && i.onHoverEnter(t, l, u) })))) : this.currentTarget = null); var d, c = t.fromDocumentToCanvasCoordinate(t.mouseDownX + e / t.zoomFactor, t.mouseDownY + i / t.zoomFactor); (d = t.getBestFigure(c.x, c.y, this.mouseDraggingElement)) !== this.currentDropTarget && (null !== this.currentDropTarget && (this.currentDropTarget.onDragLeave(this.mouseDraggingElement), this.currentDropTarget.fireEvent("dragLeave", { draggingElement: this.mouseDraggingElement }), this.currentDropTarget = null), null !== d && (this.currentDropTarget = d.delegateTarget(this.mouseDraggingElement), null !== this.currentDropTarget && (this.currentDropTarget.onDragEnter(this.mouseDraggingElement), this.currentDropTarget.fireEvent("dragEnter", { draggingElement: this.mouseDraggingElement })))) } } catch (t) { console.log(t) } }, onMouseUp: function (t, e, i, n, r) { if (null !== this.mouseDraggingElement) { var a = this.mouseDraggingElement, s = this.currentTarget; if (t.getCommandStack().startTransaction(), a.onDragEnd(e, i, n, r), s && a.editPolicy.each((function (e, i) { i instanceof o.policy.port.FlowPortsFeedbackPolicy && i.onHoverLeave(t, a, s) })), a.editPolicy.each((function (s, l) { l instanceof o.policy.port.FlowPortsFeedbackPolicy && l.onDragEnd(t, a, e, i, n, r) })), this.currentTarget = null, a.isInDragDrop = !1, a.fireEvent("dragend", { x: e, y: i, shiftKey: n, ctrlKey: r }), null !== this.currentDropTarget && (this.mouseDraggingElement.onDrop(this.currentDropTarget, e, i, n, r), this.currentDropTarget.onDragLeave(this.mouseDraggingElement), this.currentDropTarget.fireEvent("dragLeave", { draggingElement: this.mouseDraggingElement }), this.currentDropTarget instanceof o.Port)) { var l = new o.command.CommandType(o.command.CommandType.CONNECT); l.source = this.currentDropTarget, l.target = this.mouseDraggingElement; var u = this.mouseDraggingElement.createCommand(l); null !== u && (u.setConnection(this.createConnection()), t.getCommandStack().execute(u), this.currentDropTarget.onCatch(this.mouseDraggingElement, e, i, n, r)) } t.getCommandStack().commitTransaction(), this.currentDropTarget = null, this.mouseDraggingElement = null } }, createConnection: function () { var t = this._super(); return t.setRouter(new o.layout.connection.DirectRouter), t } }) }, 256: (t, e, i) => { i(459), i(555); var o = i(561), n = i(755); o.shape.layout.VerticalLayout.extend({ NAME: "Group", init: function (t) { this._super(n.extend({ bgColor: "#dbddde", color: "#d7d7d7", stroke: 1, radius: 3, resizeable: !0 }, t)), this.classLabel = new o.shape.basic.Label({ text: "ClassName", bold: !0, stroke: 1, fontColor: "#FBFCFC", bgColor: "#0899ba", color: "#067A94", radius: this.getRadius(), padding: 10, resizeable: !0, editor: new o.ui.LabelInplaceEditor }), this.add(this.classLabel) }, addEntity: function (t, e) { var i = new o.shape.basic.Label({ text: e, stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), r = i.createPort("input"); r.setName("input_" + i.id), r.setColor("#04773b"), r.setBackgroundColor("#04773b"), r.setMaxFanOut(1); var a = this; return i.on("contextmenu", (function (e, i) { n.contextMenu({ selector: "body", events: { hide: function () { n.contextMenu("destroy") } }, callback: n.proxy((function (i, o) { switch (i) { case "rename": setTimeout((function () { e.onDoubleClick() }), 10); break; case "new": setTimeout((function () { a.addEntity(t, "_new_").onDoubleClick(), a.onPortValueChanged() }), 10); break; case "delete": var n = new CommandRemoveRow(e); e.getCanvas().getCommandStack().execute(n), a.onPortValueChanged() } }), this), x: i.x, y: i.y, items: { rename: { name: "Rename" }, new: { name: "New Entity" }, sep1: "---------", delete: { name: "Delete" } } }) })), t.addRow(i), this.updateCachedPort(r), r.on("connect", ((t, e) => { var i = r.getConnections(); console.log(r), i.each(((t, e) => { e.getTarget().setValue(e.getSource().getValue()) })) })), console.log(this.getPorts()), i }, addInOut: function () { var t = new o.shape.basic.Label({ text: "Knowledge 1", stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), e = new o.shape.basic.Label({ text: "Knowledge 2", stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), i = new LabelRight({ text: "Group", stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), r = t.createPort("input"); r.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), r.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), r.setName("input_" + t.id), r.setColor("#04773b"), r.setBackgroundColor("#04773b"), r.setMaxFanOut(1); var a = e.createPort("input"); a.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), a.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), a.setName("input_" + e.id), a.setColor("#04773b"), a.setBackgroundColor("#04773b"), a.setMaxFanOut(1); var s = i.createPort("output"); s.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), s.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), s.setName("output_" + i.id), s.setColor("#04773b"), s.setBackgroundColor("#04773b"); let l = new o.shape.layout.TableLayout({ bgColor: null, color: null, radius: this.getRadius(), resizeable: !0, padding: { top: 5 } }); l.addRow(t, i), l.addRow(e); var u = this; return e.on("contextmenu", (function (t, e) { n.contextMenu({ selector: "body", events: { hide: function () { n.contextMenu("destroy") } }, callback: n.proxy((function (e, i) { switch (e) { case "rename": setTimeout((function () { t.onDoubleClick() }), 10); break; case "new": setTimeout((function () { u.addEntity(l, "_new_").onDoubleClick(), u.onPortValueChanged() }), 10) } }), this), x: e.x, y: e.y, items: { rename: { name: "Rename" }, new: { name: "New Entity" } } }) })), this.add(l), r.on("connect", ((t, e) => { r.getConnections().each(((t, e) => { e.getTarget().setValue(e.getSource().getValue()) })) })), a.on("connect", ((t, e) => { a.getConnections().each(((t, e) => { e.getTarget().setValue(e.getSource().getValue()) })) })), s.on("change:value", ((t, e) => { s.getConnections().each(((t, e) => { e.getTarget().setValue(e.getSource().getValue()) })) })), l }, addEntityIn: function (t) { var e = new o.shape.basic.Label({ text: t, stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), i = e.createPort("input"); return i.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), i.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), i.setName("input_" + e.id), e }, removeEntity: function (t) { this.remove(this.children.get(t + 1).figure) }, getEntity: function (t) { return this.children.get(t + 1).figure }, addEntityOut: function (t) { var e = new LabelRight({ text: t, stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), i = e.createPort("output"); return i.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), i.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), i.setName("output_" + e.id), e }, setName: function (t) { return this.classLabel.setText(t), this }, getPersistentAttributes: function () { var t = this._super(); return t.name = this.classLabel.getText(), t.entities = [], this.children.each((function (e, i) { e > 0 && t.entities.push({ text: i.figure.getText(), id: i.figure.id }) })), t }, setPersistentAttributes: function (t) { this._super(t), this.setName(t.name); let e = new o.shape.layout.TableLayout({ bgColor: null, color: null, radius: this.getRadius(), resizeable: !0 }); if (void 0 !== t.entitiesInput && void 0 !== t.entitiesOutput) { var i = t.entitiesOutput.length; n.each(t.entitiesInput, n.proxy((function (o, n) { var r = this.addEntityIn(n.text); if (r.id = n.id, r.getInputPort(0).setName("input_" + n.id), 0 == o && e.attr({ padding: { top: 5 } }), o < i) { var a = this.addEntityOut(t.entitiesOutput[o].text); a.id = t.entitiesOutput[o].id, a.getOutputPort(0).setName("output_" + t.entitiesOutput[o].id), e.addRow(r, a), e.setCellAlign(o, 1, "right") } else e.addRow(r) }), this)) } return this.add(e), this }, getOutputPorts: function () { return this.getChildren().get(1).getChildren().get(1).getPorts().get(0) }, getInputPorts: function () { var t = new o.util.ArrayList, e = this.getChildren().get(1).getChildren().get(0).getPorts().get(0), i = this.getChildren().get(1).getChildren().get(2).getPorts().get(0); t.add(e), t.add(i); var n = this.getChildren().get(1).getChildren().getSize(); for (let e = 3; e < n; e++)t.add(this.getChildren().get(1).getChildren().get(e).getPorts().get(0)); return t }, onPortValueChanged: function (t) { var e = []; this.getInputPorts().each((function (t, i) { e.push(i.getValue()) })); var i = ""; for (let t = 0; t < e.length - 1; t++)i = i + e[t] + ", "; i += e[e.length - 1], this.getOutputPorts().setValue(i), console.log(this.getOutputPorts().getValue()) } }) }, 176: (t, e, i) => { i(459), i(555); var o = i(561), n = i(755); o.shape.layout.VerticalLayout.extend({ NAME: "hash", init: function (t) { this._super(n.extend({ bgColor: "#dbddde", color: "#d7d7d7", stroke: 1, radius: 3, resizeable: !0 }, t)), this.classLabel = new o.shape.basic.Label({ text: "ClassName", bold: !0, stroke: 1, fontColor: "#FBFCFC", bgColor: "#ea8c55", color: "#bb7044", radius: this.getRadius(), padding: 10, resizeable: !0, editor: new o.ui.LabelInplaceEditor }), this.add(this.classLabel) }, addInOut: function () { var t = new o.shape.basic.Label({ text: "Knowledge", stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), e = new LabelRight({ text: "Digest", stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), i = t.createPort("input"); i.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), i.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), i.setName("input_" + t.id), i.setColor("#04773b"), i.setBackgroundColor("#04773b"), i.setMaxFanOut(1); var n = e.createPort("output"); n.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), n.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), n.setName("output_" + e.id), n.setColor("#04773b"), n.setBackgroundColor("#04773b"); let r = new o.shape.layout.TableLayout({ bgColor: null, color: null, radius: this.getRadius(), resizeable: !0, padding: { top: 5 } }); return r.addRow(t, e), this.add(r), i.on("connect", ((t, e) => { i.getConnections().each(((t, e) => { e.getTarget().setValue(e.getSource().getValue()) })) })), n.on("change:value", ((t, e) => { n.getConnections().each(((t, e) => { e.getTarget().setValue(e.getSource().getValue()) })) })), r }, addEntityIn: function (t) { var e = new o.shape.basic.Label({ text: t, stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), i = e.createPort("input"); return i.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), i.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), i.setName("input_" + e.id), e }, removeEntity: function (t) { this.remove(this.children.get(t + 1).figure) }, getEntity: function (t) { return this.children.get(t + 1).figure }, addEntityOut: function (t) { var e = new LabelRight({ text: t, stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), i = e.createPort("output"); return i.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), i.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), i.setName("output_" + e.id), e }, setName: function (t) { return this.classLabel.setText(t), this }, getPersistentAttributes: function () { var t = this._super(); return t.name = this.classLabel.getText(), t.entities = [], this.children.each((function (e, i) { e > 0 && t.entities.push({ text: i.figure.getText(), id: i.figure.id }) })), t }, setPersistentAttributes: function (t) { this._super(t), this.setName(t.name); let e = new o.shape.layout.TableLayout({ bgColor: null, color: null, radius: this.getRadius(), resizeable: !0 }); if (void 0 !== t.entitiesInput && void 0 !== t.entitiesOutput) { var i = t.entitiesOutput.length; n.each(t.entitiesInput, n.proxy((function (o, n) { var r = this.addEntityIn(n.text); if (r.id = n.id, r.getInputPort(0).setName("input_" + n.id), 0 == o && e.attr({ padding: { top: 5 } }), o < i) { var a = this.addEntityOut(t.entitiesOutput[o].text); a.id = t.entitiesOutput[o].id, a.getOutputPort(0).setName("output_" + t.entitiesOutput[o].id), e.addRow(r, a), e.setCellAlign(o, 1, "right") } else e.addRow(r) }), this)) } return this.add(e), this }, getOutputPorts: function () { return this.getChildren().get(1).getChildren().get(1).getPorts().get(0) }, getInputPorts: function () { return this.getChildren().get(1).getChildren().get(0).getPorts().get(0) }, onPortValueChanged: function (t) { var e = this.getInputPorts().getValue(); this.getOutputPorts().setValue("H(" + e + ")"), console.log(this.getOutputPorts().getValue()) } }) }, 649: (t, e, i) => { i(459), i(555); var o = i(561), n = i(755); o.shape.layout.VerticalLayout.extend({ NAME: "idCertificate", init: function (t) { this._super(n.extend({ bgColor: "#dbddde", color: "#d7d7d7", stroke: 1, radius: 3, resizeable: !0 }, t)), this.classLabel = new o.shape.basic.Label({ text: "ClassName", bold: !0, stroke: 1, fontColor: "#FBFCFC", bgColor: "#006341", color: "#004F34", radius: this.getRadius(), padding: 10, resizeable: !0, editor: new o.ui.LabelInplaceEditor }), this.add(this.classLabel) }, addInOut: function () { var t = new LabelRight({ text: "ID 1", stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), e = t.createPort("output"); return e.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), e.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), e.setName("output_" + t.id), e.setColor("#04773b"), e.setBackgroundColor("#04773b"), this.add(t), container }, addEntityIn: function (t) { var e = new o.shape.basic.Label({ text: t, stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), i = e.createPort("input"); return i.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), i.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), i.setName("input_" + e.id), e }, removeEntity: function (t) { this.remove(this.children.get(t + 1).figure) }, getEntity: function (t) { return this.children.get(t + 1).figure }, addEntityOut: function (t) { var e = new LabelRight({ text: t, stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), i = e.createPort("output"); return i.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), i.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), i.setName("output_" + e.id), e }, setName: function (t) { return this.classLabel.setText(t), this }, getPersistentAttributes: function () { var t = this._super(); return t.name = this.classLabel.getText(), t.entities = [], this.children.each((function (e, i) { e > 0 && t.entities.push({ text: i.figure.getText(), id: i.figure.id }) })), t }, setPersistentAttributes: function (t) { this._super(t), this.setName(t.name); let e = new o.shape.layout.TableLayout({ bgColor: null, color: null, radius: this.getRadius(), resizeable: !0 }); if (void 0 !== t.entitiesInput && void 0 !== t.entitiesOutput) { var i = t.entitiesOutput.length; n.each(t.entitiesInput, n.proxy((function (o, n) { var r = this.addEntityIn(n.text); if (r.id = n.id, r.getInputPort(0).setName("input_" + n.id), 0 == o && e.attr({ padding: { top: 5 } }), o < i) { var a = this.addEntityOut(t.entitiesOutput[o].text); a.id = t.entitiesOutput[o].id, a.getOutputPort(0).setName("output_" + t.entitiesOutput[o].id), e.addRow(r, a), e.setCellAlign(o, 1, "right") } else e.addRow(r) }), this)) } return this.add(e), this } }) }, 309: (__unused_webpack___webpack_module__, __unused_webpack___webpack_exports__, __webpack_require__) => { var _import_jquery_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(459), jquery_ui_bundle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(555), draw2d_aprover__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(561), $ = __webpack_require__(755), __WEBPACK_DEFAULT_EXPORT__ = draw2d_aprover__WEBPACK_IMPORTED_MODULE_2__.SetFigure.extend({ NAME: "LabelRight", FONT_FALLBACK: { Georgia: "Georgia, serif", "Palatino Linotype": '"Palatino Linotype", "Book Antiqua", Palatino, serif', "Times New Roman": '"Times New Roman", Times, serif', Arial: "Arial, Helvetica, sans-serif", "Arial Black": '"Arial Black", Gadget, sans-serif', "Comic Sans MS": '"Comic Sans MS", cursive, sans-serif', Impact: "Impact, Charcoal, sans-serif", "Lucida Sans Unicode": '"Lucida Sans Unicode", "Lucida Grande", sans-serif', "Tahoma, Geneva": "Tahoma, Geneva, sans-seri", "Trebuchet MS": '"Trebuchet MS", Helvetica, sans-serif', Verdana: "Verdana, Geneva, sans-serif", "Courier New": '"Courier New", Courier, monospace', "Lucida Console": '"Lucida Console", Monaco, monospace' }, init: function (t, e, i) { this.text = "", this.cachedWidth = null, this.cachedHeight = null, this.cachedMinWidth = null, this.cachedMinHeight = null, this.fontSize = 12, this.fontColor = new draw2d_aprover__WEBPACK_IMPORTED_MODULE_2__.util.Color("#080808"), this.fontFamily = null, this.padding = { top: 4, right: 4, bottom: 4, left: 4 }, this.outlineStroke = 0, this.outlineColor = new draw2d_aprover__WEBPACK_IMPORTED_MODULE_2__.util.Color(null), this.bold = !1, this.editor = null, this._super($.extend({ stroke: 1, width: 1, height: 1, resizeable: !1 }, t), $.extend({ text: this.setText, editor: this.installEditor, outlineStroke: this.setOutlineStroke, outlineColor: this.setOutlineColor, fontFamily: this.setFontFamily, fontSize: this.setFontSize, fontColor: this.setFontColor, padding: this.setPadding, bold: this.setBold }, e), $.extend({ text: this.getText, outlineStroke: this.getOutlineStroke, outlineColor: this.getOutlineColor, fontFamily: this.getFontFamily, fontSize: this.getFontSize, fontColor: this.getFontColor, padding: this.getPadding, bold: this.isBold }, i)), this.installEditPolicy(new draw2d_aprover__WEBPACK_IMPORTED_MODULE_2__.policy.figure.AntSelectionFeedbackPolicy), this.lastAppliedLabelRotation = "", this.lastAppliedTextAttributes = {} }, createSet: function () { return this.canvas.paper.text(0, 0, this.text) }, setCanvas: function (t) { this.clearCache(), this._super(t), this.clearCache() }, repaint: function (t) { if (!(!0 === this.repaintBlocked || null === this.shape || this.parent && !0 === this.parent.repaintBlocked)) { var e = this.calculateTextAttr(); e.text = this.text; var i = draw2d_aprover__WEBPACK_IMPORTED_MODULE_2__.util.JSON.flatDiff(e, this.lastAppliedTextAttributes); this.lastAppliedTextAttributes = e, $.isEmptyObject(i) || (this.svgNodes.attr(e), this.svgNodes.attr({ x: this.stroke + (this.width - this.svgNodes.getBBox(!0).width) - this.padding.right, y: this.svgNodes.getBBox(!0).height / 2 + this.padding.top + this.getStroke() })), this._super(t) } }, calculateTextAttr: function () { var t = { "text-anchor": "start", "font-size": this.fontSize, "font-weight": !0 === this.bold ? "bold" : "normal", fill: this.fontColor.hash(), stroke: this.outlineColor.hash(), "stroke-width": this.outlineStroke }; return null !== this.fontFamily && (t["font-family"] = this.fontFamily), t }, applyTransformation: function () { var t = "R" + this.rotationAngle; return this.shape.transform(t), this.lastAppliedLabelRotation = t, this.svgNodes.transform("R" + this.rotationAngle + "T" + this.getAbsoluteX() + "," + this.getAbsoluteY()), this }, setFontSize: function (t) { this.clearCache(), this.fontSize = t, this.repaint(), this.fireEvent("change:fontSize", { value: this.fontSize }), this.fireEvent("resize"); var e = this; return this.editPolicy.each((function (t, i) { i instanceof draw2d_aprover__WEBPACK_IMPORTED_MODULE_2__.policy.figure.DragDropEditPolicy && i.moved(e.canvas, e) })), this }, getFontSize: function () { return this.fontSize }, setBold: function (t) { this.clearCache(), this.bold = t, this.repaint(), this.fireEvent("change:bold", { value: this.bold }), this.fireEvent("resize"); var e = this; return this.editPolicy.each((function (t, i) { i instanceof draw2d_aprover__WEBPACK_IMPORTED_MODULE_2__.policy.figure.DragDropEditPolicy && i.moved(e.canvas, e) })), this }, isBold: function () { return this.bold }, setOutlineColor: function (t) { return this.outlineColor = new draw2d_aprover__WEBPACK_IMPORTED_MODULE_2__.util.Color(t), this.repaint(), this.fireEvent("change:outlineColor", { value: this.outlineColor }), this }, getOutlineColor: function () { return this.outlineColor }, setOutlineStroke: function (t) { return this.outlineStroke = t, this.repaint(), this.fireEvent("change:outlineStroke", { value: this.outlineStroke }), this }, getOutlineStroke: function () { return this.outlineStroke }, setFontColor: function (t) { return this.fontColor = new draw2d_aprover__WEBPACK_IMPORTED_MODULE_2__.util.Color(t), this.repaint(), this.fireEvent("change:fontColor", { value: this.fontColor }), this }, getFontColor: function () { return this.fontColor }, setPadding: function (t) { return this.clearCache(), "number" == typeof t ? this.padding = { top: t, right: t, bottom: t, left: t } : $.extend(this.padding, t), this.repaint(), this.fireEvent("change:padding", { value: this.padding }), this }, getPadding: function () { return this.padding }, setFontFamily: function (t) { return this.clearCache(), null != t && void 0 !== this.FONT_FALLBACK[t] && (t = this.FONT_FALLBACK[t]), this.fontFamily = t, this.repaint(), this.fireEvent("change:fontFamily", { value: this.fontFamily }), this }, getFontFamily: function () { return this.fontFamily }, setDimension: function (t, e) { return this.clearCache(), this._super(t, e), this }, clearCache: function () { return this.portRelayoutRequired = !0, this.cachedMinWidth = null, this.cachedMinHeight = null, this.cachedWidth = null, this.cachedHeight = null, this.lastAppliedTextAttributes = {}, this }, getMinWidth: function () { return null === this.shape ? 0 : (null === this.cachedMinWidth && (this.cachedMinWidth = this.svgNodes.getBBox(!0).width + this.padding.left + this.padding.right + 2 * this.getStroke()), this.cachedMinWidth) }, getMinHeight: function () { return null === this.shape ? 0 : (null === this.cachedMinHeight && (this.cachedMinHeight = this.svgNodes.getBBox(!0).height + this.padding.top + this.padding.bottom + 2 * this.getStroke()), this.cachedMinHeight) }, getWidth: function () { return null === this.shape ? 0 : (null === this.cachedWidth && (!0 === this.resizeable ? this.cachedWidth = Math.max(this.width, this.getMinWidth()) : this.cachedWidth = this.getMinWidth()), this.cachedWidth) }, getHeight: function () { return null === this.shape ? 0 : (null === this.cachedHeight && (this.cachedHeight = Math.max(this.height, this.getMinHeight())), this.cachedHeight) }, installEditor: function (editor) { return "string" == typeof editor && (editor = eval("new " + editor + "()")), this.editor = editor, this }, onDoubleClick: function () { null !== this.editor && this.editor.start(this) }, getText: function () { return this.text }, setText: function (t) { this.clearCache(), this.text = t, this.repaint(); var e = this; return this.editPolicy.each((function (t, i) { i instanceof draw2d_aprover__WEBPACK_IMPORTED_MODULE_2__.policy.figure.DragDropEditPolicy && i.moved(e.canvas, e) })), this.fireEvent("resize"), this.fireEvent("change:text", { value: this.text }), null !== this.parent && this.parent.repaint(), this }, hitTest: function (t, e) { if (0 === this.rotationAngle) return this._super(t, e); var i = this.shape.matrix, o = this.getBoundingBox().getVertices(); o.each((function (t, e) { var o = i.x(e.x, e.y), n = i.y(e.x, e.y); e.x = o, e.y = n })); var n = 0, r = 3, a = !1; for (n = 0; n < 4; n++) { var s = o.get(n), l = o.get(r); (s.y < e && l.y >= e || l.y < e && s.y >= e) && (s.x <= t || l.x <= t) && s.x + (e - s.y) / (l.y - s.y) * (l.x - s.x) < t && (a = !a), r = n } return a }, getPersistentAttributes: function () { var t = this._super(); return t.text = this.text, t.outlineStroke = this.outlineStroke, t.outlineColor = this.outlineColor.hash(), t.fontSize = this.fontSize, t.fontColor = this.fontColor.hash(), t.fontFamily = this.fontFamily, null !== this.editor && (t.editor = this.editor.NAME), t }, setPersistentAttributes: function (memento) { this._super(memento), void 0 !== memento.text && this.setText(memento.text), void 0 !== memento.outlineStroke && this.setOutlineStroke(memento.outlineStroke), void 0 !== memento.outlineColor && this.setOutlineColor(memento.outlineColor), void 0 !== memento.fontFamily && this.setFontFamily(memento.fontFamily), void 0 !== memento.fontSize && this.setFontSize(memento.fontSize), void 0 !== memento.fontColor && this.setFontColor(memento.fontColor), "string" == typeof memento.editor && this.installEditor(eval("new " + memento.editor + "()")) } }) }, 833: (t, e, i) => { i(459), i(555); var o = i(561), n = i(755); o.shape.layout.VerticalLayout.extend({ NAME: "mac", init: function (t) { this._super(n.extend({ bgColor: "#dbddde", color: "#d7d7d7", stroke: 1, radius: 3, resizeable: !0 }, t)), this.classLabel = new o.shape.basic.Label({ text: "ClassName", bold: !0, stroke: 1, fontColor: "#FBFCFC", bgColor: "#c75146", color: "#9F4038", radius: this.getRadius(), padding: 10, resizeable: !0, editor: new o.ui.LabelInplaceEditor }), this.add(this.classLabel) }, addInOut: function () { var t = new o.shape.basic.Label({ text: "Symmetric Key", stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), e = new o.shape.basic.Label({ text: "Knowledge", stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), i = new LabelRight({ text: "Tag", stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), n = t.createPort("input"); n.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), n.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), n.setSemanticGroup("symmetrickey"), n.setName("input_" + t.id), n.setColor("#00C389"), n.setBackgroundColor("#00C389"), n.setMaxFanOut(1); var r = e.createPort("input"); r.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), r.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), r.setName("input_" + e.id), r.setColor("#04773b"), r.setBackgroundColor("#04773b"), r.setMaxFanOut(1); var a = i.createPort("output"); a.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), a.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), a.setName("output_" + i.id), a.setColor("#04773b"), a.setBackgroundColor("#04773b"); let s = new o.shape.layout.TableLayout({ bgColor: null, color: null, radius: this.getRadius(), resizeable: !0, padding: { top: 5 } }); return s.addRow(t, i), s.addRow(e), this.add(s), r.on("connect", ((t, e) => { r.getConnections().each(((t, e) => { e.getTarget().setValue(e.getSource().getValue()) })) })), n.on("connect", ((t, e) => { n.getConnections().each(((t, e) => { e.getTarget().setValue(e.getSource().getValue()) })) })), a.on("change:value", ((t, e) => { a.getConnections().each(((t, e) => { e.getTarget().setValue(e.getSource().getValue()) })) })), s }, addEntityIn: function (t) { var e = new o.shape.basic.Label({ text: t, stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), i = e.createPort("input"); return i.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), i.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), i.setName("input_" + e.id), e }, removeEntity: function (t) { this.remove(this.children.get(t + 1).figure) }, getEntity: function (t) { return this.children.get(t + 1).figure }, addEntityOut: function (t) { var e = new LabelRight({ text: t, stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), i = e.createPort("output"); return i.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), i.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), i.setName("output_" + e.id), e }, setName: function (t) { return this.classLabel.setText(t), this }, getPersistentAttributes: function () { var t = this._super(); return t.name = this.classLabel.getText(), t.entities = [], this.children.each((function (e, i) { e > 0 && t.entities.push({ text: i.figure.getText(), id: i.figure.id }) })), t }, setPersistentAttributes: function (t) { this._super(t), this.setName(t.name); let e = new o.shape.layout.TableLayout({ bgColor: null, color: null, radius: this.getRadius(), resizeable: !0 }); if (void 0 !== t.entitiesInput && void 0 !== t.entitiesOutput) { var i = t.entitiesOutput.length; n.each(t.entitiesInput, n.proxy((function (o, n) { var r = this.addEntityIn(n.text); if (r.id = n.id, r.getInputPort(0).setName("input_" + n.id), 0 == o && e.attr({ padding: { top: 5 } }), o < i) { var a = this.addEntityOut(t.entitiesOutput[o].text); a.id = t.entitiesOutput[o].id, a.getOutputPort(0).setName("output_" + t.entitiesOutput[o].id), e.addRow(r, a), e.setCellAlign(o, 1, "right") } else e.addRow(r) }), this)) } return this.add(e), this }, getOutputPorts: function () { return this.getChildren().get(1).getChildren().get(1).getPorts().get(0) }, getInputPorts: function () { var t = new o.util.ArrayList, e = this.getChildren().get(1).getChildren().get(0).getPorts().get(0), i = this.getChildren().get(1).getChildren().get(2).getPorts().get(0); return console.log(this.getChildren().get(1).getChildren().get(1).getPorts().get(0)), t.add(e), t.add(i), t }, onPortValueChanged: function (t) { var e = []; this.getInputPorts().each((function (t, i) { e.push(i.getValue()) })), this.getOutputPorts().setValue("M<sub>" + e[0] + "</sub>(" + e[1] + ")"), console.log(this.getOutputPorts().getValue()) } }) }, 618: (t, e, i) => { i(459), i(555); var o = i(561), n = i(801), r = i(350); const a = o.policy.port.PortFeedbackPolicy.extend({ NAME: "FlowPortsFeedbackPolicy", init: function (t, e, i) { this._super(t, e, i), this.connectionLine = null, this.tweenable = null }, onDragStart: function (t, e, i, n, a, s) { var l = 0, u = t.getAllPorts().clone(); return u.each((function (t, e) { void 0 === e.__beforeInflate && (e.__beforeInflate = e.getWidth()), l = e.__beforeInflate })), u.grep((function (t) { return t.parent.NAME != e.parent.NAME && t.parent.parent.parent !== e.parent.parent.parent || t instanceof o.HybridPort || e instanceof o.HybridPort })), this.tweenable = new r.Tweenable, this.tweenable.tween({ from: { size: l / 2 }, to: { size: l }, duration: 200, easing: "easeOutSine", step: function (t) { u.each((function (e, i) { i.shape.attr({ rx: t.size, ry: t.size }), i.width = i.height = 2 * t.size })) } }), this.connectionLine = new o.shape.basic.Line, this.connectionLine.setCanvas(t), this.connectionLine.getShapeElement(), this.connectionLine.setDashArray("- "), this.connectionLine.setColor("#30c48a"), this.onDrag(t, e), !0 }, onDrag: function (t, e) { var i = e.ox + e.getParent().getAbsoluteX(), o = e.oy + e.getParent().getAbsoluteY(); this.connectionLine.setStartPoint(i, o), this.connectionLine.setEndPoint(e.getAbsoluteX(), e.getAbsoluteY()) }, onDragEnd: function (t, e, i, o, n, r) { this.tweenable && (this.tweenable.stop(!0), this.tweenable.dispose(), this.tweenable = null), t.getAllPorts().each((function (t, e) { e.shape.attr({ rx: e.__beforeInflate / 2, ry: e.__beforeInflate / 2 }), e.width = e.height = e.__beforeInflate, delete e.__beforeInflate })), this.connectionLine.setCanvas(null), this.connectionLine = null }, onHoverEnter: function (t, e, i) { this.connectionLine.setGlow(!0), i.setGlow(!0) }, onHoverLeave: function (t, e, i) { i.setGlow(!1), this.connectionLine, this.connectionLine.setGlow(!1) } }); var s = i(755); o.shape.layout.VerticalLayout.extend({ NAME: "Message", init: function (t) { this._super(s.extend({ bgColor: "#dbddde", color: "#d7d7d7", stroke: 1, radius: 3 }, t)), this.parser = null, this.classLabel = new o.shape.basic.Label({ text: "ClassName", bold: !0, stroke: 1, fontColor: "#FBFCFC", bgColor: "#16679a", color: "#11527B", radius: this.getRadius(), padding: 10, resizeable: !0, editor: new o.ui.LabelInplaceEditor }), this.add(this.classLabel) }, addEntity: function (t, e) { var i = new o.shape.basic.Label({ text: e, stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), r = i.createPort("input"); r.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), r.installEditPolicy(new a), r.setName("input_" + i.id), r.setColor("#04773b"), r.setBackgroundColor("#04773b"), r.setMaxFanOut(1); var l = this; return i.on("contextmenu", (function (e, i) { s.contextMenu({ selector: "body", events: { hide: function () { s.contextMenu("destroy") } }, callback: s.proxy((function (i, o) { switch (i) { case "rename": setTimeout((function () { e.onDoubleClick() }), 10); break; case "new": setTimeout((function () { l.addEntity(t, "_new_").onDoubleClick(), l.onPortValueChanged() }), 10); break; case "delete": var r = new n.Z(e); e.getCanvas().getCommandStack().execute(r), l.onPortValueChanged() } }), this), x: i.x, y: i.y, items: { rename: { name: "Rename" }, new: { name: "New Entity" }, sep1: "---------", delete: { name: "Delete" } } }) })), t.addRow(i), this.updateCachedPort(r), r.on("connect", ((t, e) => { var i = r.getConnections(); console.log(r), i.each(((t, e) => { e.getTarget().setValue(e.getSource().getValue()) })) })), i }, addInOut: function (t) { this.parser = t; var e = new o.shape.basic.Label({ text: "Field 1", stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), i = new o.shape.basic.Label({ text: "Field 2", stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), r = e.createPort("input"); r.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), r.installEditPolicy(new a), r.setName("input_" + e.id), r.setColor("#04773b"), r.setBackgroundColor("#04773b"), r.setMaxFanOut(1); var l = i.createPort("input"); l.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), l.installEditPolicy(new a), l.setName("input_" + i.id), l.setColor("#04773b"), l.setBackgroundColor("#04773b"), l.setMaxFanOut(1); var u = this; i.on("contextmenu", (function (t, e) { s.contextMenu({ selector: "body", events: { hide: function () { s.contextMenu("destroy") } }, callback: s.proxy((function (e, i) { switch (e) { case "rename": setTimeout((function () { t.onDoubleClick() }), 10); break; case "new": setTimeout((function () { u.addEntity(d, "_new_").onDoubleClick(), u.onPortValueChanged() }), 10); break; case "delete": var o = new n.Z(t); t.getCanvas().getCommandStack().execute(o), u.onPortValueChanged() } }), this), x: e.x, y: e.y, items: { rename: { name: "Rename" }, new: { name: "New Entity" }, sep1: "---------", delete: { name: "Delete" } } }) })), e.on("contextmenu", (function (t, e) { s.contextMenu({ selector: "body", events: { hide: function () { s.contextMenu("destroy") } }, callback: s.proxy((function (e, i) { switch (e) { case "rename": setTimeout((function () { t.onDoubleClick() }), 10); break; case "new": setTimeout((function () { u.addEntity(d, "_new_").onDoubleClick(), u.onPortValueChanged() }), 10) } }), this), x: e.x, y: e.y, items: { rename: { name: "Rename" }, new: { name: "New Entity" } } }) })); let d = new o.shape.layout.TableLayout({ bgColor: null, color: null, radius: this.getRadius(), resizeable: !0, padding: { top: 5 } }); return d.addRow(e), d.addRow(i), this.add(d), r.on("connect", ((t, e) => { r.getConnections().each(((t, e) => { e.getTarget().setValue(e.getSource().getValue()) })) })), l.on("connect", ((t, e) => { l.getConnections().each(((t, e) => { e.getTarget().setValue(e.getSource().getValue()) })) })), d }, removeEntity: function (t) { this.remove(this.children.get(t + 1).figure) }, getEntity: function (t) { return this.children.get(t + 1).figure }, setName: function (t) { return this.classLabel.setText(t), this }, getPersistentAttributes: function () { var t = this._super(); return t.name = this.classLabel.getText(), t.entities = [], this.children.each((function (e, i) { e > 0 && t.entities.push({ text: i.figure.getText(), id: i.figure.id }) })), t }, setPersistentAttributes: function (t) { return this._super(t), this.setName(t.name), void 0 !== t.entities && s.each(t.entities, s.proxy((function (t, e) { var i = this.addEntity(e.text); i.id = e.id, i.getInputPort(0).setName("input_" + e.id), i.getOutputPort(0).setName("output_" + e.id) }), this)), this }, getInputPorts: function () { var t = new o.util.ArrayList, e = this.getChildren().get(1).getChildren().get(0).getPorts().get(0); t.add(e); var i = this.getChildren().get(1).getChildren().getSize(); for (let e = 1; e < i; e++)t.add(this.getChildren().get(1).getChildren().get(e).getPorts().get(0)); return t }, onPortValueChanged: function (t) { var e = []; this.getInputPorts().each((function (t, i) { e.push(i.getValue()) })); var i = ""; for (let t = 0; t < e.length - 1; t++)i = i + e[t] + ", "; i += e[e.length - 1], this.parser.setMessage(i) } }) }, 553: (t, e, i) => { i(459), i(555); var o = i(561), n = i(755); o.shape.layout.VerticalLayout.extend({ NAME: "nonce", init: function (t) { this._super(n.extend({ bgColor: "#dbddde", color: "#d7d7d7", stroke: 1, radius: 3, resizeable: !0 }, t)), this.nonce = JSON.parse(sessionStorage.getItem("nonce")), this.classLabel = new o.shape.basic.Label({ text: "ClassName", bold: !0, stroke: 1, fontColor: "#FBFCFC", bgColor: "#154734", color: "#103829", radius: this.getRadius(), padding: 10, resizeable: !0, editor: new o.ui.LabelInplaceEditor }), this.add(this.classLabel) }, addInOut: function () { for (let i = 0; i < this.nonce.length; i++) { var t = new LabelRight({ text: this.nonce[i], stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), e = t.createPort("output"); e.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), e.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), e.setName("output_" + t.id), e.setColor("#04773b"), e.setBackgroundColor("#04773b"), e.setValue(this.nonce[i]), this.add(t) } return container }, addEntityIn: function (t) { var e = new o.shape.basic.Label({ text: t, stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), i = e.createPort("input"); return i.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), i.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), i.setName("input_" + e.id), e }, removeEntity: function (t) { this.remove(this.children.get(t + 1).figure) }, getEntity: function (t) { return this.children.get(t + 1).figure }, addEntityOut: function (t) { var e = new LabelRight({ text: t, stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), i = e.createPort("output"); return i.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), i.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), i.setName("output_" + e.id), e }, setName: function (t) { return this.classLabel.setText(t), this }, getPersistentAttributes: function () { var t = this._super(); return t.name = this.classLabel.getText(), t.entities = [], this.children.each((function (e, i) { e > 0 && t.entities.push({ text: i.figure.getText(), id: i.figure.id }) })), t }, setPersistentAttributes: function (t) { this._super(t), this.setName(t.name); let e = new o.shape.layout.TableLayout({ bgColor: null, color: null, radius: this.getRadius(), resizeable: !0 }); if (void 0 !== t.entitiesInput && void 0 !== t.entitiesOutput) { var i = t.entitiesOutput.length; n.each(t.entitiesInput, n.proxy((function (o, n) { var r = this.addEntityIn(n.text); if (r.id = n.id, r.getInputPort(0).setName("input_" + n.id), 0 == o && e.attr({ padding: { top: 5 } }), o < i) { var a = this.addEntityOut(t.entitiesOutput[o].text); a.id = t.entitiesOutput[o].id, a.getOutputPort(0).setName("output_" + t.entitiesOutput[o].id), e.addRow(r, a), e.setCellAlign(o, 1, "right") } else e.addRow(r) }), this)) } return this.add(e), this } }) }, 825: (t, e, i) => { i.d(e, { Z: () => o }); const o = Class.extend({ NAME: "Parser", init: function () { }, setMessage: function (t) { document.getElementById("toolbar_message_preview").innerHTML = t } }) }, 217: (t, e, i) => { i(459), i(555); var o = i(561), n = i(755); o.shape.layout.VerticalLayout.extend({ NAME: "signature", init: function (t) { this._super(n.extend({ bgColor: "#dbddde", color: "#d7d7d7", stroke: 1, radius: 3, resizeable: !0 }, t)), this.classLabel = new o.shape.basic.Label({ text: "ClassName", bold: !0, stroke: 1, fontColor: "#FBFCFC", bgColor: "#ad2e24", color: "#8A241C", radius: this.getRadius(), padding: 10, resizeable: !0, editor: new o.ui.LabelInplaceEditor }), this.add(this.classLabel) }, addInOut: function () { var t = new o.shape.basic.Label({ text: "Private Key", stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), e = new o.shape.basic.Label({ text: "Knowledge", stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), i = new LabelRight({ text: "signature", stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), n = t.createPort("input"); n.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), n.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), n.setSemanticGroup("asymprivkey"), n.setName("input_" + t.id), n.setColor("#7AE1BF"), n.setBackgroundColor("#7AE1BF"), n.setMaxFanOut(1); var r = e.createPort("input"); r.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), r.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), r.setName("input_" + e.id), r.setColor("#04773b"), r.setBackgroundColor("#04773b"), r.setMaxFanOut(1); var a = i.createPort("output"); a.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), a.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), a.setName("output_" + i.id), a.setColor("#04773b"), a.setBackgroundColor("#04773b"); let s = new o.shape.layout.TableLayout({ bgColor: null, color: null, radius: this.getRadius(), resizeable: !0, padding: { top: 5 } }); return s.addRow(t, i), s.addRow(e), this.add(s), r.on("connect", ((t, e) => { r.getConnections().each(((t, e) => { e.getTarget().setValue(e.getSource().getValue()) })) })), n.on("connect", ((t, e) => { n.getConnections().each(((t, e) => { e.getTarget().setValue(e.getSource().getValue()) })) })), a.on("change:value", ((t, e) => { a.getConnections().each(((t, e) => { e.getTarget().setValue(e.getSource().getValue()) })) })), s }, addEntityIn: function (t) { var e = new o.shape.basic.Label({ text: t, stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), i = e.createPort("input"); return i.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), i.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), i.setName("input_" + e.id), e }, removeEntity: function (t) { this.remove(this.children.get(t + 1).figure) }, getEntity: function (t) { return this.children.get(t + 1).figure }, addEntityOut: function (t) { var e = new LabelRight({ text: t, stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), i = e.createPort("output"); return i.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), i.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), i.setName("output_" + e.id), e }, setName: function (t) { return this.classLabel.setText(t), this }, getPersistentAttributes: function () { var t = this._super(); return t.name = this.classLabel.getText(), t.entities = [], this.children.each((function (e, i) { e > 0 && t.entities.push({ text: i.figure.getText(), id: i.figure.id }) })), t }, setPersistentAttributes: function (t) { this._super(t), this.setName(t.name); let e = new o.shape.layout.TableLayout({ bgColor: null, color: null, radius: this.getRadius(), resizeable: !0 }); if (void 0 !== t.entitiesInput && void 0 !== t.entitiesOutput) { var i = t.entitiesOutput.length; n.each(t.entitiesInput, n.proxy((function (o, n) { var r = this.addEntityIn(n.text); if (r.id = n.id, r.getInputPort(0).setName("input_" + n.id), 0 == o && e.attr({ padding: { top: 5 } }), o < i) { var a = this.addEntityOut(t.entitiesOutput[o].text); a.id = t.entitiesOutput[o].id, a.getOutputPort(0).setName("output_" + t.entitiesOutput[o].id), e.addRow(r, a), e.setCellAlign(o, 1, "right") } else e.addRow(r) }), this)) } return this.add(e), this }, getOutputPorts: function () { return this.getChildren().get(1).getChildren().get(1).getPorts().get(0) }, getInputPorts: function () { var t = new o.util.ArrayList, e = this.getChildren().get(1).getChildren().get(0).getPorts().get(0), i = this.getChildren().get(1).getChildren().get(2).getPorts().get(0); return console.log(this.getChildren().get(1).getChildren().get(1).getPorts().get(0)), t.add(e), t.add(i), t }, onPortValueChanged: function (t) { var e = []; this.getInputPorts().each((function (t, i) { e.push(i.getValue()) })), this.getOutputPorts().setValue("{" + e[1] + "}<sub>" + e[0] + "<sup>-1</sup></sub>"), console.log(this.getOutputPorts().getValue()) } }) }, 272: (t, e, i) => { i(459), i(555); var o = i(561), n = i(755); o.shape.layout.VerticalLayout.extend({ NAME: "symmetricEncryption", init: function (t) { this._super(n.extend({ bgColor: "#dbddde", color: "#d7d7d7", stroke: 1, radius: 3, resizeable: !0 }, t)), this.classLabel = new o.shape.basic.Label({ text: "ClassName", bold: !0, stroke: 1, fontColor: "#FBFCFC", bgColor: "#81171b", color: "#671215", radius: this.getRadius(), padding: 10, resizeable: !0, editor: new o.ui.LabelInplaceEditor }), this.add(this.classLabel) }, addInOut: function () { var t = new o.shape.basic.Label({ text: "Symmetric Key", stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), e = new o.shape.basic.Label({ text: "Knowledge", stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), i = new LabelRight({ text: "Ciphertext", stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), n = t.createPort("input"); n.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), n.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), n.setSemanticGroup("symmetrickey"), n.setName("input_" + t.id), n.setColor("#00C389"), n.setBackgroundColor("#00C389"), n.setMaxFanOut(1); var r = e.createPort("input"); r.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), r.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), r.setName("input_" + e.id), r.setColor("#04773b"), r.setBackgroundColor("#04773b"), r.setMaxFanOut(1); var a = i.createPort("output"); a.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), a.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), a.setName("output_" + i.id), a.setColor("#04773b"), a.setBackgroundColor("#04773b"); let s = new o.shape.layout.TableLayout({ bgColor: null, color: null, radius: this.getRadius(), resizeable: !0, padding: { top: 5 } }); return s.addRow(t, i), s.addRow(e), this.add(s), r.on("connect", ((t, e) => { r.getConnections().each(((t, e) => { e.getTarget().setValue(e.getSource().getValue()) })) })), n.on("connect", ((t, e) => { n.getConnections().each(((t, e) => { e.getTarget().setValue(e.getSource().getValue()) })) })), a.on("change:value", ((t, e) => { a.getConnections().each(((t, e) => { e.getTarget().setValue(e.getSource().getValue()) })) })), s }, addEntityIn: function (t) { var e = new o.shape.basic.Label({ text: t, stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), i = e.createPort("input"); return i.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), i.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), i.setName("input_" + e.id), e }, removeEntity: function (t) { this.remove(this.children.get(t + 1).figure) }, getEntity: function (t) { return this.children.get(t + 1).figure }, addEntityOut: function (t) { var e = new LabelRight({ text: t, stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), i = e.createPort("output"); return i.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), i.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), i.setName("output_" + e.id), e }, setName: function (t) { return this.classLabel.setText(t), this }, getPersistentAttributes: function () { var t = this._super(); return t.name = this.classLabel.getText(), t.entities = [], this.children.each((function (e, i) { e > 0 && t.entities.push({ text: i.figure.getText(), id: i.figure.id }) })), t }, setPersistentAttributes: function (t) { this._super(t), this.setName(t.name); let e = new o.shape.layout.TableLayout({ bgColor: null, color: null, radius: this.getRadius(), resizeable: !0 }); if (void 0 !== t.entitiesInput && void 0 !== t.entitiesOutput) { var i = t.entitiesOutput.length; n.each(t.entitiesInput, n.proxy((function (o, n) { var r = this.addEntityIn(n.text); if (r.id = n.id, r.getInputPort(0).setName("input_" + n.id), 0 == o && e.attr({ padding: { top: 5 } }), o < i) { var a = this.addEntityOut(t.entitiesOutput[o].text); a.id = t.entitiesOutput[o].id, a.getOutputPort(0).setName("output_" + t.entitiesOutput[o].id), e.addRow(r, a), e.setCellAlign(o, 1, "right") } else e.addRow(r) }), this)) } return this.add(e), this }, getOutputPorts: function () { return this.getChildren().get(1).getChildren().get(1).getPorts().get(0) }, getInputPorts: function () { var t = new o.util.ArrayList, e = this.getChildren().get(1).getChildren().get(0).getPorts().get(0), i = this.getChildren().get(1).getChildren().get(2).getPorts().get(0); return console.log(this.getChildren().get(1).getChildren().get(1).getPorts().get(0)), t.add(e), t.add(i), t }, onPortValueChanged: function (t) { var e = []; this.getInputPorts().each((function (t, i) { e.push(i.getValue()) })), this.getOutputPorts().setValue("{" + e[1] + "}<sub>" + e[0] + "</sub>"), console.log(this.getOutputPorts().getValue()) } }) }, 698: (t, e, i) => { i(459), i(555); var o = i(561), n = i(755); o.shape.layout.VerticalLayout.extend({ NAME: "symmetricKey", init: function (t) { this._super(n.extend({ bgColor: "#dbddde", color: "#d7d7d7", stroke: 1, radius: 3, resizeable: !0 }, t)), this.classLabel = new o.shape.basic.Label({ text: "ClassName", bold: !0, stroke: 1, fontColor: "#FBFCFC", bgColor: "#00C389", color: "#009C6D", radius: this.getRadius(), padding: 10, resizeable: !0, editor: new o.ui.LabelInplaceEditor }), this.add(this.classLabel) }, addInOut: function () { var t = new LabelRight({ text: "Key 1", stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), e = t.createPort("output"); return e.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), e.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), e.setSemanticGroup("symmetrickey"), e.setName("output_" + t.id), e.setColor("#00C389"), e.setBackgroundColor("#00C389"), this.add(t), container }, addEntityIn: function (t) { var e = new o.shape.basic.Label({ text: t, stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), i = e.createPort("input"); return i.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), i.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), i.setName("input_" + e.id), e }, removeEntity: function (t) { this.remove(this.children.get(t + 1).figure) }, getEntity: function (t) { return this.children.get(t + 1).figure }, addEntityOut: function (t) { var e = new LabelRight({ text: t, stroke: 0, radius: 0, bgColor: null, padding: { left: 10, top: 3, right: 10, bottom: 5 }, fontColor: "#4a4a4a", resizeable: !0, editor: new o.ui.LabelEditor }), i = e.createPort("output"); return i.uninstallEditPolicy(new o.policy.port.IntrusivePortsFeedbackPolicy), i.installEditPolicy(new o.policy.port.FlowPortsFeedbackPolicy), i.setName("output_" + e.id), e }, setName: function (t) { return this.classLabel.setText(t), this }, getPersistentAttributes: function () { var t = this._super(); return t.name = this.classLabel.getText(), t.entities = [], this.children.each((function (e, i) { e > 0 && t.entities.push({ text: i.figure.getText(), id: i.figure.id }) })), t }, setPersistentAttributes: function (t) { this._super(t), this.setName(t.name); let e = new o.shape.layout.TableLayout({ bgColor: null, color: null, radius: this.getRadius(), resizeable: !0 }); if (void 0 !== t.entitiesInput && void 0 !== t.entitiesOutput) { var i = t.entitiesOutput.length; n.each(t.entitiesInput, n.proxy((function (o, n) { var r = this.addEntityIn(n.text); if (r.id = n.id, r.getInputPort(0).setName("input_" + n.id), 0 == o && e.attr({ padding: { top: 5 } }), o < i) { var a = this.addEntityOut(t.entitiesOutput[o].text); a.id = t.entitiesOutput[o].id, a.getOutputPort(0).setName("output_" + t.entitiesOutput[o].id), e.addRow(r, a), e.setCellAlign(o, 1, "right") } else e.addRow(r) }), this)) } return this.add(e), this } }) }, 359: (t, e, i) => { i.d(e, { Z: () => r }), i(459), i(555); var o = i(561), n = (i(86), i(801), i(755)); const r = Class.extend({ NAME: "Toolbar", init: function (t, e, i) { this.html = n("#" + t), this.html1 = n("#" + e), this.view = i, this.elements = null, i.getCommandStack().addEventListener(this), i.on("select", n.proxy(this.onSelectionChanged, this)), this.undoButton = n("<button class='gray undo'>Undo</button>"), this.html.append(this.undoButton), this.undoButton.click(n.proxy((function () { this.view.getCommandStack().undo() }), this)), this.redoButton = n("<button class='gray redo'>Redo</button>"), this.html.append(this.redoButton), this.redoButton.click(n.proxy((function () { this.view.getCommandStack().redo() }), this)), this.delimiter = n("<span class='toolbar_delimiter'>&nbsp;</span>"), this.html.append(this.delimiter), this.deleteButton = n("<button class='gray delete'>Delete</button>"), this.html.append(this.deleteButton), this.deleteButton.click(n.proxy((function () { var t = this.view.getPrimarySelection(); this.view.removeInstance(t.NAME); var e = new o.command.CommandDelete(t); this.view.getCommandStack().execute(e) }), this)), this.disableButton(this.undoButton, !0), this.disableButton(this.redoButton, !0), this.disableButton(this.deleteButton, !0), this.html.append(n("<div id='toolbar_message_preview'>WAITING...</div>")), this.applyButton = n("<button class='apply'>Apply</button>"), this.html1.append(this.applyButton), this.applyButton.click(n.proxy((function () { console.log("submitted") }), this)), this.cancelButton = n("<button class='cancel'>Cancel</button>"), this.html1.append(this.cancelButton), this.cancelButton.click(n.proxy((function () { console.log("submitted") }), this)) }, onSelectionChanged: function (t, e) { this.disableButton(this.deleteButton, null === e.figure) }, stackChanged: function (t) { this.disableButton(this.undoButton, !t.getStack().canUndo()), this.disableButton(this.redoButton, !t.getStack().canRedo()) }, disableButton: function (t, e) { t.prop("disabled", e), e ? t.addClass("disabled") : t.removeClass("disabled") } }) }, 86: (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => { __webpack_require__.d(__webpack_exports__, { Z: () => __WEBPACK_DEFAULT_EXPORT__ }); var _import_jquery_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(459), jquery_ui_bundle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(555), draw2d_aprover__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(561), _Parser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(825), _asymmetricEncryption_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(223), _AsymmetricPrivKey_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(957), _LabelRight_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(309), _symmetricEncryption_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(272), _signature_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(217), _MAC_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(833), _Hash_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(176), _Group_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(256), _Nonce_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(553), _IDCertificate_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(649), _BitString_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(509), _SymmetricKey_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(698), _AsymmetricPubKey_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(631), _Message_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(618), $ = __webpack_require__(755); const __WEBPACK_DEFAULT_EXPORT__ = draw2d_aprover__WEBPACK_IMPORTED_MODULE_2__.Canvas.extend({ NAME: "View", init: function (t, e) { this._super(t, 2e3, 2e3), this.setScrollArea("#" + t), this.parser = e, this.message = 0, this.nonce = 0, this.timestamp = 0, this.idcert = 0, this.bitstring = 0, this.symkey = 0, this.asymprivkey = 0, this.asympubkey = 0 }, onDrop: function (droppedDomNode, x, y, shiftKey, ctrlKey) { var type = $(droppedDomNode).data("shape"); if ((this.message < 1 || "Message" !== type) && (this.nonce < 1 || "nonce" !== type) && (this.timestamp < 1 || "timestamp" !== type) && (this.idcert < 1 || "idCertificate" !== type) && (this.bitstring < 1 || "bitstring" !== type) && (this.symkey < 1 || "symmetricKey" !== type) && (this.asympubkey < 1 || "asymmetricPublicKey" !== type) && (this.asymprivkey < 1 || "asymmetricPrivateKey" !== type)) { var figure = eval("new " + type + "();"); switch ("Message" === type ? figure.addInOut(this.parser) : figure.addInOut(), type) { case "symmetricEncryption": figure.setName("AES"); break; case "asymmetricEncryption": figure.setName("RSA"); break; case "signature": figure.setName("DSA"); break; case "mac": figure.setName("mac"); break; case "hash": figure.setName("SHA3"); break; case "Message": figure.setName("Message Name"), this.message = this.message + 1; break; case "Group": figure.setName("Group"); break; case "nonce": figure.setName("nonce"), this.nonce = this.nonce + 1; break; case "idCertificate": figure.setName("ID Certificate"), this.idcert = this.idcert + 1; break; case "bitstring": figure.setName("bitstring"), this.bitstring = this.bitstring + 1; break; case "timestamp": figure.setName("timestamp"), this.timestamp = this.timestamp + 1; break; case "symmetricKey": figure.setName("Symmetric Key"), this.symkey = this.symkey + 1; break; case "asymmetricPublicKey": figure.setName("Asymmetric Public Key"), this.asympubkey = this.asympubkey + 1; break; case "asymmetricPrivateKey": figure.setName("Asymmetric Private Key"), this.asymprivkey = this.asymprivkey + 1; break; default: console.log("error 404: Type not Found") }var command = new draw2d_aprover__WEBPACK_IMPORTED_MODULE_2__.command.CommandAdd(this, figure, x, y); this.getCommandStack().execute(command) } }, removeInstance: function (t) { switch (t) { case "Message": this.message = this.message - 1; break; case "nonce": this.nonce = this.nonce - 1; break; case "idCertificate": this.idcert = this.idcert - 1; break; case "bitstring": this.bitstring = this.bitstring - 1; break; case "timestamp": this.timestamp = this.timestamp - 1; break; case "symmetricKey": this.symkey = this.symkey - 1; break; case "asymmetricPublicKey": this.asympubkey = this.asympubkey - 1; break; case "asymmetricPrivateKey": this.asymprivkey = this.asymprivkey - 1; break; default: console.log("It's been deleted " + t) } } }) }, 460: (t, e, i) => { i.d(e, { k: () => n }); var o = i(138); const n = function (t) { t.tooltip && [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]')).map((function (t) { return new o.u(t) })), t.popover && [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]')).map((function (t) { return new o.J2(t, {}) })), t.toasts && [].slice.call(document.querySelectorAll('[data-bs-toggle="toast"]')).map((function (t) { let e = null; if ("A" === t.nodeName) { if (e = t.href || null, !e.includes("#")) return; e = `#${e.split("#").pop()}` } else "BUTTON" === t.nodeName && (e = t.dataset.bsTarget || null); const i = document.querySelector(e); if (!i) return; const n = new o.FN(i, {}); t.addEventListener("click", (function (t) { t.preventDefault(), n.show() })) })) } }, 459: (t, e, i) => { var o = i(755); window.$ = window.jQuery = o } }]);
//# sourceMappingURL=906.js.map